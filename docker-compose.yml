version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: laravel_mysql
    restart: unless-stopped
    ports:
      - "56501:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root_S3cur3P@ss_2024
      MYSQL_DATABASE: laravel_api_db
      MYSQL_USER: laravel_user
      MYSQL_PASSWORD: laravel_P@ssw0rd_2024
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - laravel_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot_S3cur3P@ss_2024"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  adminer:
    image: adminer:latest
    container_name: laravel_adminer
    restart: unless-stopped
    ports:
      - "56502:8080"
    environment:
      ADMINER_DEFAULT_SERVER: mysql
    networks:
      - laravel_network
    depends_on:
      mysql:
        condition: service_healthy

  php:
    build:
      context: ./docker/php
      dockerfile: Dockerfile
    container_name: laravel_php
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./src:/var/www/html
    environment:
      DB_CONNECTION: mysql
      DB_HOST: mysql
      DB_PORT: 3306
      DB_DATABASE: laravel_api_db
      DB_USERNAME: laravel_user
      DB_PASSWORD: laravel_P@ssw0rd_2024
      APP_NAME: "Laravel API"
      APP_ENV: local
      APP_DEBUG: "true"
      APP_URL: http://localhost:56500
    networks:
      - laravel_network
    depends_on:
      mysql:
        condition: service_healthy

  nginx:
    image: nginx:alpine
    container_name: laravel_nginx
    restart: unless-stopped
    ports:
      - "56500:80"
    volumes:
      - ./src:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - laravel_network
    depends_on:
      - php

networks:
  laravel_network:
    driver: bridge

volumes:
  mysql_data:
    driver: local
